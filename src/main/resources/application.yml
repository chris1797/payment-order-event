server:
  port: 8080

spring:
#  profiles:
#    active: monolith

  datasource:
    url: jdbc:postgresql://localhost:5432/dev?currentSchema=payment-order
    username:
    password:
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        show_sql: true
        hibernate.format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: payment-order-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        enable.idempotence: true # 프로듀서의 멱등성 설정
        acks: all # 모든 ISR(복제본)에 대한 확인 응답 대기
        linger.ms: 5 # 배치 전 대기 시간 (밀리초)
    properties:
      schema.registry.url: http://localhost:8081 # 스키마를 관리할 서버 주소 (Avro, Protobuf 등 스키마 기반 사용 시)
      specific.avro.reader: true # Avro 리더 사용 설정, 읽기용 (타입 안전)

  flyway:
    enabled: true
    baseline-on-migrate: true